# code mainly from https://github.com/nantayo/N1-OpenWrt 
name: Build ImmortalWrt N1

on:
  workflow_dispatch:
   inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 0 1,16 * *

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: v24.10.0
  CONFIG_FILE: config/.config-imm-2025040301
  DIY_SH: Armv8/diy.sh
  UPLOAD_FIRMWARE: true  
  TZ: Asia/Shanghai
  FILE_NAME: OPENWRT-N1
  PRODUCT_NAME: OPENWRT-N1
  OPENWRT_TAG: OPENWRT-N1

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get clean
        sudo apt-get autoclean
        sudo rm -rf /var/lib/apt/lists/*
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/nantayo/My-Pkg/master/2410)
        sudo -E apt-get -qq autoremove --purge
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}
        df -Th   
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --depth=1 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update & Install feeds
      run: |
        chmod +x $DIY_SH
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        $GITHUB_WORKSPACE/$DIY_SH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom config
      run: |
        #[ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH connect to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make clean
        ulimit -c unlimited
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    - name: Upload OpenWrt Firmware to Release
      uses: ncipollo/release-action@main
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      with:
        name: OPENWRT_N1
        tag: ${{ env.OPENWRT_TAG }}
        makeLatest: true
        replacesArtifacts: true
        artifacts: openwrt/bin/targets/*/*/*rootfs.tar.gz
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Package Armvirt as OpenWrt
      if: steps.download.outputs.status == 'success'
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        WHOAMI: very20101
        KERNEL_REPO_URL: https://github.com/ophub/kernel/tree/main/pub/stable
        KERNEL_VERSION_NAME: 5.15.160_6.1.80_6.6.30
        KERNEL_AUTO_LATEST: true
        DISTRIB_REVISION: R${{ env.DATE1 }} by very20101
        
    - name: Upload the packaged OpenWrt
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
          name: ARMV8-OPENWRT
          tag: ${{ env.OPENWRT_TAG }} 
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            建议刷写U盘使用
            * 基本信息
            IP: 192.168.1.200
            账户: root
            密码: password
