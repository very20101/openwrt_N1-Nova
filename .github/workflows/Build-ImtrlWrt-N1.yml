# code mainly from https://github.com/nantayo/N1-OpenWrt 
name: Build ImmortalWrt N1

on:
  workflow_dispatch:
   inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 0 1,16 * *

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: config/.config-opwrt-2025040201
  DIY_SH: Armv8/diy.sh
  UPLOAD_FIRMWARE: true  
  TZ: Asia/Shanghai
  FILE_NAME: OPENWRT_N1
  PRODUCT_NAME: OPENWRT_N1
  OPENWRT_TAG: OPENWRT_N1

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q) || true
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo swapoff -a && sudo rm -f /swapfile /mnt/swapfile
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo apt-get clean
        sudo apt-get autoclean
        sudo -E apt-get -qq update -y
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}
        df -Th   
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --depth=1 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update & Install feeds
      run: |
        chmod +x $DIY_SH
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        $GITHUB_WORKSPACE/$DIY_SH
        ./scripts/feeds update -a
        ./scripts/feeds install -f

    - name: Load custom config
      run: |
        #[ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH connect to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        df -Th

    - name: Compile the firmware
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make clean
        rm -rf package/smpackage/trojan-plus
        ulimit -c unlimited
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    - name: Package OpenWrt Firmware
      uses: ophub/flippy-openwrt-actions@main
      env:
       OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
       PACKAGE_SOC: s905d
       KERNEL_VERSION_NAME: 6.1.y_6.6.y
       KERNEL_AUTO_LATEST: true
       WHOAMI: very20101
        
    - name: Upload the packaged OpenWrt
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
          tag: Immortalwrt_Amlogic_N1_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           Flashing fireware to USB drive
           Running on USB drive in case some plugins unstable
           Dateï¼š${{ env.PACKAGED_OUTPUTDATE }}
           OpenWrt image for N1 
           IP: 192.168.1.200
           username: root
           password: password
